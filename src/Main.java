import test.Test;

/**
 * Антон, привет!
 * Я в первый раз решил запушить решение, так как не совсем понял логику этой задачи.
 * Решил, что с твоими комментариями смогу разобраться лучше. Но в этот раз ты был сухой и краток)))
 *
 * Я, если честно, до сих пор не могу понять на кой хрен нам нужен Epic.
 * Я скачал несколько приложений с Play Market, покапался в них, потыкал, ни где не увидел логики
 * дополнительного объекта. Понятно, что все это сокрыто, однако как по мне гораздо проще создавать Задачи,
 * а если нужны подзадачи, то просто добавляем в нее подзадачу. Ведь в БД так и можно осуществить эти связи
 * через ManyToOne и OneToMany. В общем, может я не прав и проще иметь отдельный класс для хранения Epic,
 * но хрен его знает.
 *
 * Тесты сделал немного неуклюжими, просто строго по заданию. Глаз рвёт, но честно...никогда не любил
 * писать тесты xD)))
 *
 * Иногда кажется, что ты ревьюишь меня строже, чем остальных, хотя я не знаю как ты их ревьюишь.
 * Суть в том, что это вроде хорошо, что ты относишься как к своему коллеге на работе и не даёшь спуску,
 * но иногда это бьёт по моему самолюбию)) Возможно, я просто близко воспринимаю, хотя понимаю, что еще далеко
 * не хороший код пишу.
 *
 * А, и хотел узнать, видна ли логика в моём коде? Виден ли потенциал? Кто-то может заниматься год и быть затупком,
 * но мне хочется знать, правильно ли я иду, в правильном русле думаю, есть ли какие-то моменты, что выделяют
 * стиль моих мыслей, реализации кода, чем у других. Другие, я имею в виду, не новички первый месяц в Java, а кто
 * более-менее что-то знает. Я бы сказал ближе к Junior.
 *
 * Рефакторинг провожу по возможности, как ни как работа.
 */
public class Main {
    public static void main(String[] args) {
        Test test = new Test();
        test.startTest();
    }
}
